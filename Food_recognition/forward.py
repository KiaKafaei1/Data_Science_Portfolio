# -*- coding: utf-8 -*-
"""forward.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xeF3yjIY5hCawL6k8hT2mRPnzekYL-GJ
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib
import numpy as np
import pandas as pd
import torch 
import torchvision
import torch.nn as nn
import torch.nn.functional as F 
from torchvision import transforms
import cv2 
from PIL import Image
import matplotlib.pyplot as plt
import glob
import os
from IPython.display import clear_output
from skimage.io import imread
from skimage.transform import resize
from google.colab import drive
import sys

from anchorbox_generator import Anchorbox_generator
from rpn import RPN
from nms_detection_loss import nms, sampleRoi, ROIPooling, detectionNetwork

def forward(img0, bbox0, labels):
  # Generate anchorboxes
  anchor_labels, anchor_locations, anchors = Anchorbox_generator(bbox0,labels)

  # Run RPN
  rpn_lambda = 10
  pred_anchor_locs, objectness_score, out_map, rpn_loc_loss, rpn_cls_loss, rpn_loss = RPN(img0, bbox0, anchor_locations, anchor_labels, rpn_lambda)

  # run nms
  roi = nms(anchors, pred_anchor_locs, objectness_score)

  # run sampleRoI
  pos_index, neg_index, gt_roi_locs, gt_roi_labels, sample_roi = sampleRoi(roi,bbox0,labels)

  # run RoI pooling
  rois, out_maxPool = ROIPooling(sample_roi, out_map)

  # run detection network
  roi_loss = detectionNetwork(out_maxPool, gt_roi_locs, gt_roi_labels)

  # total loss
  total_loss = roi_loss + rpn_loss
  print(roi_loss)
  print(rpn_loss)
  return total_loss

